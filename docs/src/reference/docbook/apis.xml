<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="apis" xmlns:xlink="http://www.w3.org/1999/xlink">
	<title>Working with Service Provider APIs</title>
  
	<section xml:id="section_api_linkedin">
		<title>LinkedIn</title>
        
		<para>
			LinkedIn is a social networking site geared toward professionals. 
			It enables its users to maintain and correspond with a network of contacts they have are professionally linked to.
		</para>
		
		<para>
			Spring Social offers integration with LinkedIn via <interfacename>LinkedIn</interfacename> and its implementation, <classname>LinkedInTemplate</classname>.
		</para>
		
		<para>
			To create an instance of <classname>LinkedInTemplate</classname>, you may pass in your application's OAuth 1 credentials, along with an access token/secret pair to the constructor:
		</para>
		
		<programlisting language="java"><![CDATA[
String consumerKey = "..."; // The application's consumer key
String consumerSecret = "..."; // The application's consumer secret
String accessToken = "..."; // The access token granted after OAuth authorization
String accessTokenSecret = "..."; // The access token secret granted after OAuth authorization
LinkedIn linkedin = new LinkedInTemplate(consumerKey, consumerSecret, accessToken, accessTokenSecret);]]>
		</programlisting>
		
		<para>
			If you are using Spring Social's service provider framework, as described in <xref linkend="serviceprovider"/>, you can get an instance of <interfacename>LinkedIn</interfacename> via a <interfacename>Connection</interfacename>. 
			For example, the following snippet calls <methodname>getApi()</methodname> on a connection to retrieve a <interfacename>LinkedIn</interfacename>:
		</para>				
		
		<programlisting language="java"><![CDATA[
Connection<LinkedIn> connection = connectionRepository.findPrimaryConnectionToApi(LinkedIn.class);
LinkedIn linkedin = connection.getApi();]]>
		</programlisting>
		
		<para>
			Here, <interfacename>ConnectionRepository</interfacename> is being asked for the primary connections that the current user has with LinkedIn.
			From that connection, it retrieves a <interfacename>LinkedIn</interfacename> instance that is configured with the connection details received when the connection was first established.
		</para>
		
		<para>
			Once you have a <interfacename>LinkedIn</interfacename> you can use it to interact with LinkedIn on behalf of the user who the access token was granted for.
		</para>

		<section id="linkedin-getProfile">
			<title>Retrieving a user's LinkedIn profile data</title>
			
			<para>
				To retrieve the authenticated user's profile data, call the <methodname>getUserProfile()</methodname> method:
			</para>
			
			<programlisting language="java"><![CDATA[
LinkedInProfile profile = linkedin.getUserProfile();]]>
			</programlisting>
			
			<para>
				The data returned in the <classname>LinkedInProfile</classname> includes the user's LinkedIn ID, first and last names, their "headline", the industry they're in, and URLs for the public and standard profile pages.
			</para>
			
			<para>
				If it's only the user's LinkedIn ID you need, then you can get that by calling the <methodname>getProfileId()</methodname> method:
			</para>
			
			<programlisting language="java"><![CDATA[
String profileId = linkedin.getProfileId();]]>
			</programlisting>
			
			<para>
				Or if you only need a URL for the user's public profile page, call <methodname>getProfileUrl()</methodname>:
			</para>
			
			<programlisting language="java"><![CDATA[
String profileUrl = linkedin.getProfileUrl();]]>
			</programlisting>

		</section>

		<section id="linkedin-connections">
			<title>Getting a user's LinkedIn connections</title>
			
			<para>
				To retrieve a list of LinkedIn users to whom the user is connected, call the <methodname>getConnections()</methodname> method:
			</para>
			
			<programlisting><![CDATA[
List<LinkedInProfile> connections = linkedin.getConnections();]]>
			</programlisting>
			
			<para>
				This will return a list of <classname>LinkedInProfile</classname> objects for the user's 1st-degree network (those LinkedIn users to whom the user is directly linked--not their extended network).
			</para>

		</section>
	</section>
</chapter>